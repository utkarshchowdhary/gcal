{
    "swagger": "2.0",
    "info": {
        "title": "Google calendar API",
        "description": "All about Google calendar API.",
        "version": "1.0"
    },
    "produces": ["application/json"],
    "x-amazon-apigateway-request-validators": {
        "all": {
            "validateRequestBody": true,
            "validateRequestParameters": true
        },
        "params-only": {
            "validateRequestBody": false,
            "validateRequestParameters": true
        }
    },
    "x-amazon-apigateway-request-validator": "params-only",
    "paths": {
        "/calendar/events": {
            "post": {
                "x-swagger-router-controller": "calendar",
                "x-swagger-router-handle-subpaths": false,
                "operationId": "createCalendarEvent",
                "tags": ["calendar"],
                "description": "Post calendar event",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventCreationParams"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Successful request.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    }
                },
                "x-amazon-apigateway-request-validator": "all",
                "x-amazon-apigateway-integration": {
                    "uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${!stageVariables.functionName}/invocations"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    },
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                }
            }
        }
    },
    "definitions": {
        "eventCreationParams": {
            "type": "object",
            "required": ["calType", "date", "timeZone", "participants"],
            "properties": {
                "allDay": {
                    "type": "boolean"
                },
                "rptFrq": {
                    "type": "string",
                    "enum": ["na", "dy", "wk", "mh", "qr", "yr"]
                },
                "calType": {
                    "type": "string",
                    "enum": ["google_calendar"]
                },
                "title": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tmFrm": {
                    "type": "string",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$"
                },
                "tmTo": {
                    "type": "string",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$"
                },
                "date": {
                    "type": "string",
                    "pattern": "^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$"
                },
                "timeZone": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 500,
                    "items": {
                        "type": "object",
                        "required": ["email"],
                        "properties": {
                            "email": {
                                "type": "string",
                                "pattern": "^[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$"
                            },
                            "displayName": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "successResponse": {
            "properties": {
                "status": {
                    "type": "string",
                    "enum": ["success"]
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "Error": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": ["message"]
        }
    }
}
